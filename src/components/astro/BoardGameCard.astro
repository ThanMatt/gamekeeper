---
import { Clock, Users } from "@lucide/astro";

import type { BoardGame } from "@/types";

export interface Props {
  boardGame: BoardGame;
}

const { boardGame } = Astro.props;

// Truncate description if it's too long
const truncateDescription = (text: string, maxLength: number = 120) => {
  if (text.length <= maxLength) return text;
  return text.slice(0, maxLength).trim() + "...";
};

const description = boardGame.description
  ? truncateDescription(boardGame.description)
  : "Discover breathtaking landscapes, vibrant cities, and hidden gems that will inspire your next adventure.";
---

<a href={`/games/${boardGame.slug}`} class="group block">
  <div
    class="bg-card text-card-foreground hover:bg-accent/5 overflow-hidden rounded-lg border shadow-sm transition-colors">
    <!-- Game Image -->
    <div class="relative h-48 w-full overflow-hidden">
      {
        boardGame.image ? (
          <img
            src={boardGame.image}
            alt={`${boardGame.name} game cover`}
            class="h-full w-full object-cover transition-transform group-hover:scale-105"
            loading="lazy"
          />
        ) : (
          <div class="bg-muted flex h-full w-full items-center justify-center">
            <span class="text-muted-foreground text-sm">
              No image available
            </span>
          </div>
        )
      }

      <!-- BGG Rating Badge (if available) -->
      {
        boardGame.rating > 0 && (
          <div class="absolute top-2 right-2 rounded bg-black/70 px-2 py-1 text-xs font-medium text-white">
            ‚≠ê {boardGame.rating.toFixed(1)}
          </div>
        )
      }
    </div>

    <!-- Card Content -->
    <div class="p-4">
      <!-- Header -->
      <div class="mb-2 flex items-start justify-between">
        <div class="flex-1">
          <h3 class="mb-1 text-lg leading-none font-semibold tracking-tight">
            {boardGame.name}
            {
              boardGame.yearPublished && (
                <span class="text-muted-foreground font-normal">
                  ({boardGame.yearPublished})
                </span>
              )
            }
          </h3>

          <div class="text-muted-foreground flex items-center gap-3 text-sm">
            {
              boardGame.playingTime > 0 && (
                <span class="flex items-center gap-1">
                  <Clock class="h-4 w-4" />
                  {boardGame.playingTime} min
                </span>
              )
            }

            {
              boardGame.minPlayers > 0 && boardGame.maxPlayers > 0 && (
                <span class="flex items-center gap-1">
                  <Users class="h-4 w-4" />
                  {boardGame.minPlayers === boardGame.maxPlayers
                    ? `${boardGame.minPlayers} players`
                    : `${boardGame.minPlayers}-${boardGame.maxPlayers} players`}
                </span>
              )
            }
          </div>
        </div>
      </div>

      <!-- Description -->
      <p class="text-muted-foreground mb-3 text-sm leading-relaxed">
        {description}
      </p>

      <!-- Footer with additional info -->
      <div class="flex items-center justify-between border-t pt-2">
        <div class="text-muted-foreground flex items-center gap-2 text-xs">
          {
            boardGame.weight > 0 && (
              <span title="Complexity">üéØ {boardGame.weight.toFixed(1)}/5</span>
            )
          }

          {
            boardGame.rank > 0 && (
              <span title="BGG Rank">üèÜ #{boardGame.rank}</span>
            )
          }
        </div>

        <div class="text-muted-foreground text-xs">
          {boardGame.plugins.length}
          {boardGame.plugins.length !== 1 ? "tools" : "tool"}
        </div>
      </div>
    </div>
  </div>
</a>

<style>
  /* Ensure consistent card heights in grids */
  .group {
    height: 100%;
  }

  .group > div {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .group .p-4 {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .group .p-4 > p {
    flex: 1;
  }
</style>
